name: Build

on: [push]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2019]
        version: ['6.3.1']
    steps:
    - uses: actions/checkout@v1

    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: ${{ matrix.version }}
        host: 'windows'
        target: 'desktop'
        arch: 'win64_msvc2019_64'
        modules: 'qtwebengine qtwebchannel qtpositioning'
        tools: 'tools_openssl_x64,1.1.1-10,qt.tools.openssl.win_x64'

    - name: Download exiv2
      if: startsWith(matrix.os, 'windows')
      run: |
        curl -L https://github.com/Exiv2/exiv2/releases/download/v0.27.5/exiv2-0.27.5-2019msvc64.zip --output exiv2-0.27.5-2019msvc64.zip
        7z x exiv2-0.27.5-2019msvc64.zip -oc:/

      shell: cmd


    - name: Build
      if: startsWith(matrix.os, 'windows')
      run: |
        call "%programfiles(x86)%\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat"
        mkdir build
        cd build
        cmake -DCMAKE_PREFIX_PATH="C:\Qt\6.3.1\msvc2019_64" -Dexiv2_DIR="C:\exiv2-0.27.5-2019msvc64\lib\cmake\exiv2" -DCMAKE_GENERATOR_PLATFORM=x64 -DCMAKE_BUILD_TYPE=RELEASE -DDEPLOY_QT_LIBRARIES=ON -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON ..
        if %errorlevel% neq 0 exit /b %errorlevel%
        cmake --build . --config Release
        if %errorlevel% neq 0 exit /b %errorlevel%
        ctest -C Release .
        if %errorlevel% neq 0 exit /b %errorlevel%
        cp *.qm ./Release
        for /R C:\exiv2-0.27.5-2019msvc64 %%f in (*.dll) do copy %%f "%CD%\Release"
        for /R c:\Qt\Tools\OpenSSL %%f in (*.dll) do copy %%f "%CD%\Release"
      shell: cmd


    - name: Archive build results
      uses: actions/upload-artifact@v2
      with:
        name: com.github.jmlich.geotagging
        path: ./build/Release/*
